<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdut.dao.UsersMapper">

  <resultMap id="BaseResultMap" type="com.sdut.pojo.Users">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="uname" jdbcType="VARCHAR" property="uname" />
    <result column="upwd" jdbcType="VARCHAR" property="upwd" />
    <result column="uauth" jdbcType="INTEGER" property="uauth" />
    <result column="ustatus" jdbcType="INTEGER" property="ustatus" />
    <result column="usex" jdbcType="VARCHAR" property="usex" />
    <result column="ubirth" jdbcType="VARCHAR" property="ubirth" />
    <result column="utel" jdbcType="VARCHAR" property="utel" />
    <result column="uemail" jdbcType="VARCHAR" property="uemail" />
    <result column="etc1" jdbcType="VARCHAR" property="etc1" />
    <result column="etc2" jdbcType="VARCHAR" property="etc2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, uname, upwd, uauth, ustatus, usex, ubirth, utel, uemail, etc1, etc2
  </sql>
  <select id="selectByExample" parameterType="com.sdut.pojo.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdut.pojo.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdut.pojo.Users">
    insert into users (uid, uname, upwd, 
      uauth, ustatus, usex, 
      ubirth, utel, uemail, 
      etc1, etc2)
    values (#{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{upwd,jdbcType=VARCHAR}, 
      #{uauth,jdbcType=INTEGER}, #{ustatus,jdbcType=INTEGER}, #{usex,jdbcType=VARCHAR}, 
      #{ubirth,jdbcType=VARCHAR}, #{utel,jdbcType=VARCHAR}, #{uemail,jdbcType=VARCHAR}, 
      #{etc1,jdbcType=VARCHAR}, #{etc2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sdut.pojo.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="uname != null">
        uname,
      </if>
      <if test="upwd != null">
        upwd,
      </if>
      <if test="uauth != null">
        uauth,
      </if>
      <if test="ustatus != null">
        ustatus,
      </if>
      <if test="usex != null">
        usex,
      </if>
      <if test="ubirth != null">
        ubirth,
      </if>
      <if test="utel != null">
        utel,
      </if>
      <if test="uemail != null">
        uemail,
      </if>
      <if test="etc1 != null">
        etc1,
      </if>
      <if test="etc2 != null">
        etc2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upwd != null">
        #{upwd,jdbcType=VARCHAR},
      </if>
      <if test="uauth != null">
        #{uauth,jdbcType=INTEGER},
      </if>
      <if test="ustatus != null">
        #{ustatus,jdbcType=INTEGER},
      </if>
      <if test="usex != null">
        #{usex,jdbcType=VARCHAR},
      </if>
      <if test="ubirth != null">
        #{ubirth,jdbcType=VARCHAR},
      </if>
      <if test="utel != null">
        #{utel,jdbcType=VARCHAR},
      </if>
      <if test="uemail != null">
        #{uemail,jdbcType=VARCHAR},
      </if>
      <if test="etc1 != null">
        #{etc1,jdbcType=VARCHAR},
      </if>
      <if test="etc2 != null">
        #{etc2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdut.pojo.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.uname != null">
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.upwd != null">
        upwd = #{record.upwd,jdbcType=VARCHAR},
      </if>
      <if test="record.uauth != null">
        uauth = #{record.uauth,jdbcType=INTEGER},
      </if>
      <if test="record.ustatus != null">
        ustatus = #{record.ustatus,jdbcType=INTEGER},
      </if>
      <if test="record.usex != null">
        usex = #{record.usex,jdbcType=VARCHAR},
      </if>
      <if test="record.ubirth != null">
        ubirth = #{record.ubirth,jdbcType=VARCHAR},
      </if>
      <if test="record.utel != null">
        utel = #{record.utel,jdbcType=VARCHAR},
      </if>
      <if test="record.uemail != null">
        uemail = #{record.uemail,jdbcType=VARCHAR},
      </if>
      <if test="record.etc1 != null">
        etc1 = #{record.etc1,jdbcType=VARCHAR},
      </if>
      <if test="record.etc2 != null">
        etc2 = #{record.etc2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set uid = #{record.uid,jdbcType=INTEGER},
      uname = #{record.uname,jdbcType=VARCHAR},
      upwd = #{record.upwd,jdbcType=VARCHAR},
      uauth = #{record.uauth,jdbcType=INTEGER},
      ustatus = #{record.ustatus,jdbcType=INTEGER},
      usex = #{record.usex,jdbcType=VARCHAR},
      ubirth = #{record.ubirth,jdbcType=VARCHAR},
      utel = #{record.utel,jdbcType=VARCHAR},
      uemail = #{record.uemail,jdbcType=VARCHAR},
      etc1 = #{record.etc1,jdbcType=VARCHAR},
      etc2 = #{record.etc2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdut.pojo.Users">
    update users
    <set>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upwd != null">
        upwd = #{upwd,jdbcType=VARCHAR},
      </if>
      <if test="uauth != null">
        uauth = #{uauth,jdbcType=INTEGER},
      </if>
      <if test="ustatus != null">
        ustatus = #{ustatus,jdbcType=INTEGER},
      </if>
      <if test="usex != null">
        usex = #{usex,jdbcType=VARCHAR},
      </if>
      <if test="ubirth != null">
        ubirth = #{ubirth,jdbcType=VARCHAR},
      </if>
      <if test="utel != null">
        utel = #{utel,jdbcType=VARCHAR},
      </if>
      <if test="uemail != null">
        uemail = #{uemail,jdbcType=VARCHAR},
      </if>
      <if test="etc1 != null">
        etc1 = #{etc1,jdbcType=VARCHAR},
      </if>
      <if test="etc2 != null">
        etc2 = #{etc2,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdut.pojo.Users">
    update users
    set uname = #{uname,jdbcType=VARCHAR},
      upwd = #{upwd,jdbcType=VARCHAR},
      uauth = #{uauth,jdbcType=INTEGER},
      ustatus = #{ustatus,jdbcType=INTEGER},
      usex = #{usex,jdbcType=VARCHAR},
      ubirth = #{ubirth,jdbcType=VARCHAR},
      utel = #{utel,jdbcType=VARCHAR},
      uemail = #{uemail,jdbcType=VARCHAR},
      etc1 = #{etc1,jdbcType=VARCHAR},
      etc2 = #{etc2,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <select id="login" parameterType="com.sdut.pojo.Users" resultMap="BaseResultMap">
    SELECT * FROM users
    WHERE upwd = #{upwd,jdbcType=VARCHAR} AND (utel = #{utel,jdbcType=VARCHAR} OR uemail = #{uemail,jdbcType=VARCHAR})
  </select>
  <insert id="register" parameterType="com.sdut.pojo.Users">
    insert into users (uname, upwd, utel, uemail)
    values (#{uname,jdbcType=VARCHAR}, #{upwd,jdbcType=VARCHAR}, #{utel,jdbcType=VARCHAR}, #{uemail,jdbcType=VARCHAR})
  </insert>
  <select id="selectAllByStatus" parameterType="com.sdut.pojo.Users" resultMap="BaseResultMap">
    SELECT * FROM users
    WHERE ustatus = 1
  </select>
  <select id="auditSelectByKey" parameterType="String" resultMap="BaseResultMap">
    SELECT * FROM users
    WHERE ustatus = 1 AND (uname LIKE #{keyword} OR utel LIKE #{keyword} OR uemail LIKE #{keyword})
  </select>
  <update id="passAudit" parameterType="int">
    update users
    set ustatus = 2
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="failAudit" parameterType="int">
    update users
    set ustatus = 3
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="passAllAudit" parameterType="list">
    update users
    set ustatus = 2
    where uid IN
    <foreach collection="list" separator="," close=")" open="(" item="uid" index="index">
      #{uid}
    </foreach>
  </update>
  <update id="failAllAudit" parameterType="list">
    update users
    set ustatus = 3
    where uid IN
    <foreach collection="list" separator="," close=")" open="(" item="uid" index="index">
      #{uid}
    </foreach>
  </update>
  <select id="userSelectByKey" parameterType="String" resultMap="BaseResultMap">
    SELECT * FROM users
    WHERE uauth = 2 AND (uname LIKE #{keyword} OR utel LIKE #{keyword} OR uemail LIKE #{keyword})
  </select>
  <delete id="deleteUser" parameterType="int">
    delete from users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteAllUser" parameterType="list">
    delete from users
    where uid IN
    <foreach collection="list" separator="," open="(" close=")" index="index" item="uid">
      #{uid}
    </foreach>
  </delete>
  <select id="selectRepeat" parameterType="com.sdut.pojo.Users" resultMap="BaseResultMap">
    SELECT * FROM users
    WHERE utel = #{utel,jdbcType=VARCHAR} OR uemail = #{uemail,jdbcType=VARCHAR}
  </select>
  <insert id="addUser" parameterType="com.sdut.pojo.Users">
    insert into users (uname, upwd, usex, ubirth, utel, uemail)
    values (
    #{uname,jdbcType=VARCHAR}, #{upwd,jdbcType=VARCHAR}, #{usex,jdbcType=VARCHAR},
    #{ubirth,jdbcType=VARCHAR}, #{utel,jdbcType=VARCHAR}, #{uemail,jdbcType=VARCHAR}
    )
  </insert>
  <update id="updateUser" parameterType="com.sdut.pojo.Users">
    update users
    set
    <if test="uname != null">
      uname = #{uname,jdbcType=VARCHAR},
    </if>
    <if test="usex != null">
      usex = #{usex,jdbcType=VARCHAR},
    </if>
    <if test="ubirth != null">
      ubirth = #{ubirth,jdbcType=VARCHAR},
    </if>
    <if test="utel != null">
      utel = #{utel,jdbcType=VARCHAR},
    </if>
    <if test="uemail != null">
      uemail = #{uemail,jdbcType=VARCHAR}
    </if>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <select id="selectUserById" resultMap="BaseResultMap">
    SELECT DISTINCT users.* FROM `user-meeting`, users
    WHERE users.uid = `user-meeting`.uid AND `user-meeting`.mid = #{param1}
    AND (uname LIKE #{param2} OR utel LIKE #{param2} OR uemail LIKE #{param2})
  </select>
  <select id="selectUserNum" parameterType="int" resultType="int">
    select count(*) from users, `user-meeting`
    WHERE users.uid = `user-meeting`.uid AND `user-meeting`.mid = #{id}
  </select>
  <select id="selectByUid" parameterType="int" resultMap="BaseResultMap">
    SELECT * FROM users
    WHERE uid = #{id}
  </select>
  <update id="updatePwd">
    update users
    set upwd = #{param1}
    where uid = #{param2} AND upwd = #{param3}
  </update>
</mapper>