<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdut.dao.MeetingMapper">
  <resultMap id="BaseResultMap" type="com.sdut.pojo.Meeting">
    <id column="mid" jdbcType="INTEGER" property="mid" />
    <result column="mname" jdbcType="VARCHAR" property="mname" />
    <result column="maddress" jdbcType="VARCHAR" property="maddress" />
    <result column="mbtime" jdbcType="VARCHAR" property="mbtime" />
    <result column="metime" jdbcType="VARCHAR" property="metime" />
    <result column="mnum" jdbcType="INTEGER" property="mnum" />
    <result column="mintro" jdbcType="VARCHAR" property="mintro" />
    <result column="etc1" jdbcType="VARCHAR" property="etc1" />
    <result column="etc2" jdbcType="VARCHAR" property="etc2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mid, mname, maddress, mbtime, metime, mnum, mintro, etc1, etc2
  </sql>
  <select id="selectByExample" parameterType="com.sdut.pojo.MeetingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meeting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from meeting
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from meeting
    where mid = #{mid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdut.pojo.MeetingExample">
    delete from meeting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdut.pojo.Meeting">
    insert into meeting (mid, mname, maddress, 
      mbtime, metime, mnum, 
      mintro, etc1, etc2)
    values (#{mid,jdbcType=INTEGER}, #{mname,jdbcType=VARCHAR}, #{maddress,jdbcType=VARCHAR}, 
      #{mbtime,jdbcType=VARCHAR}, #{metime,jdbcType=VARCHAR}, #{mnum,jdbcType=INTEGER}, 
      #{mintro,jdbcType=VARCHAR}, #{etc1,jdbcType=VARCHAR}, #{etc2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sdut.pojo.Meeting">
    insert into meeting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        mid,
      </if>
      <if test="mname != null">
        mname,
      </if>
      <if test="maddress != null">
        maddress,
      </if>
      <if test="mbtime != null">
        mbtime,
      </if>
      <if test="metime != null">
        metime,
      </if>
      <if test="mnum != null">
        mnum,
      </if>
      <if test="mintro != null">
        mintro,
      </if>
      <if test="etc1 != null">
        etc1,
      </if>
      <if test="etc2 != null">
        etc2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="mname != null">
        #{mname,jdbcType=VARCHAR},
      </if>
      <if test="maddress != null">
        #{maddress,jdbcType=VARCHAR},
      </if>
      <if test="mbtime != null">
        #{mbtime,jdbcType=VARCHAR},
      </if>
      <if test="metime != null">
        #{metime,jdbcType=VARCHAR},
      </if>
      <if test="mnum != null">
        #{mnum,jdbcType=INTEGER},
      </if>
      <if test="mintro != null">
        #{mintro,jdbcType=VARCHAR},
      </if>
      <if test="etc1 != null">
        #{etc1,jdbcType=VARCHAR},
      </if>
      <if test="etc2 != null">
        #{etc2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdut.pojo.MeetingExample" resultType="java.lang.Long">
    select count(*) from meeting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update meeting
    <set>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.mname != null">
        mname = #{record.mname,jdbcType=VARCHAR},
      </if>
      <if test="record.maddress != null">
        maddress = #{record.maddress,jdbcType=VARCHAR},
      </if>
      <if test="record.mbtime != null">
        mbtime = #{record.mbtime,jdbcType=VARCHAR},
      </if>
      <if test="record.metime != null">
        metime = #{record.metime,jdbcType=VARCHAR},
      </if>
      <if test="record.mnum != null">
        mnum = #{record.mnum,jdbcType=INTEGER},
      </if>
      <if test="record.mintro != null">
        mintro = #{record.mintro,jdbcType=VARCHAR},
      </if>
      <if test="record.etc1 != null">
        etc1 = #{record.etc1,jdbcType=VARCHAR},
      </if>
      <if test="record.etc2 != null">
        etc2 = #{record.etc2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update meeting
    set mid = #{record.mid,jdbcType=INTEGER},
      mname = #{record.mname,jdbcType=VARCHAR},
      maddress = #{record.maddress,jdbcType=VARCHAR},
      mbtime = #{record.mbtime,jdbcType=VARCHAR},
      metime = #{record.metime,jdbcType=VARCHAR},
      mnum = #{record.mnum,jdbcType=INTEGER},
      mintro = #{record.mintro,jdbcType=VARCHAR},
      etc1 = #{record.etc1,jdbcType=VARCHAR},
      etc2 = #{record.etc2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdut.pojo.Meeting">
    update meeting
    <set>
      <if test="mname != null">
        mname = #{mname,jdbcType=VARCHAR},
      </if>
      <if test="maddress != null">
        maddress = #{maddress,jdbcType=VARCHAR},
      </if>
      <if test="mbtime != null">
        mbtime = #{mbtime,jdbcType=VARCHAR},
      </if>
      <if test="metime != null">
        metime = #{metime,jdbcType=VARCHAR},
      </if>
      <if test="mnum != null">
        mnum = #{mnum,jdbcType=INTEGER},
      </if>
      <if test="mintro != null">
        mintro = #{mintro,jdbcType=VARCHAR},
      </if>
      <if test="etc1 != null">
        etc1 = #{etc1,jdbcType=VARCHAR},
      </if>
      <if test="etc2 != null">
        etc2 = #{etc2,jdbcType=VARCHAR},
      </if>
    </set>
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdut.pojo.Meeting">
    update meeting
    set mname = #{mname,jdbcType=VARCHAR},
      maddress = #{maddress,jdbcType=VARCHAR},
      mbtime = #{mbtime,jdbcType=VARCHAR},
      metime = #{metime,jdbcType=VARCHAR},
      mnum = #{mnum,jdbcType=INTEGER},
      mintro = #{mintro,jdbcType=VARCHAR},
      etc1 = #{etc1,jdbcType=VARCHAR},
      etc2 = #{etc2,jdbcType=VARCHAR}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <select id="selectMeetingByKeyword" parameterType="String" resultMap="BaseResultMap">
    select * from meeting
    where mname LIKE #{keyword} OR mintro LIKE #{keyword}
  </select>
  <delete id="deleteMeeting" parameterType="int">
    delete from meeting
    where mid = #{id}
  </delete>
  <delete id="deleteAllMeeting" parameterType="list">
    delete from meeting
    where mid IN
    <foreach collection="list" separator="," open="(" close=")" index="index" item="mid">
      #{mid}
    </foreach>
  </delete>
  <insert id="addMeeting" parameterType="com.sdut.pojo.Meeting">
    insert into meeting (mname, maddress, mbtime, metime, mnum, mintro)
    values (#{mname,jdbcType=VARCHAR}, #{maddress,jdbcType=VARCHAR},
      #{mbtime,jdbcType=VARCHAR}, #{metime,jdbcType=VARCHAR},
      #{mnum,jdbcType=INTEGER}, #{mintro,jdbcType=VARCHAR})
  </insert>
  <update id="updateMeeting" parameterType="com.sdut.pojo.Meeting">
    update meeting
    set mname = #{mname,jdbcType=VARCHAR},
      maddress = #{maddress,jdbcType=VARCHAR},
      mbtime = #{mbtime,jdbcType=VARCHAR},
      metime = #{metime,jdbcType=VARCHAR},
      mnum = #{mnum,jdbcType=INTEGER},
      mintro = #{mintro,jdbcType=VARCHAR}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <select id="selectAllNo" parameterType="com.sdut.pojo.Meeting" resultMap="BaseResultMap">
    SELECT DISTINCT meeting.* FROM meeting, `user-meeting`
    WHERE meeting.mid NOT IN
    (SELECT mid FROM `user-meeting` WHERE uid = #{mid,jdbcType=INTEGER})
    AND (mname LIKE #{mname,jdbcType=VARCHAR} OR mintro LIKE #{mname,jdbcType=VARCHAR})
  </select>
  <select id="selectAllJoin" parameterType="com.sdut.pojo.Meeting" resultMap="BaseResultMap">
    SELECT DISTINCT meeting.* FROM `user-meeting`, meeting
    WHERE meeting.mid = `user-meeting`.mid AND `user-meeting`.uid = #{mid,jdbcType=INTEGER}
    AND (meeting.mname LIKE #{mname,jdbcType=VARCHAR} OR meeting.mintro LIKE #{mname,jdbcType=VARCHAR})
  </select>
</mapper>